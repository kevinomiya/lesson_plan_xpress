type Error = variant { NotFound : record { msg : text } };
type Lesson = record {
  id : nat64;
  title : text;
  teacher_id : nat64;
  students : vec nat64;
  subject : text;
  description : text;
  grade_level : text;
  schedule : vec ScheduleEntry;
};
type LessonPayload = record {
  title : text;
  teacher_id : nat64;
  subject : text;
  description : text;
  grade_level : text;
};
type Result = variant { Ok : Student; Err : Error };
type Result_1 = variant { Ok : Teacher; Err : Error };
type Result_10 = variant { Ok : Student; Err : text };
type Result_11 = variant { Ok : Teacher; Err : text };
type Result_2 = variant { Ok : Lesson; Err : Error };
type Result_3 = variant { Ok : ScheduleEntry; Err : Error };
type Result_4 = variant { Ok : vec Lesson; Err : Error };
type Result_5 = variant { Ok : vec ScheduleEntry; Err : Error };
type Result_6 = variant { Ok : vec Student; Err : Error };
type Result_7 = variant { Ok : vec Teacher; Err : Error };
type Result_8 = variant { Ok : Lesson; Err : text };
type Result_9 = variant { Ok : ScheduleEntry; Err : text };
type ScheduleEntry = record {
  id : nat64;
  day : text;
  end_time : text;
  start_time : text;
};
type SchedulePayload = record {
  day : text;
  end_time : text;
  start_time : text;
};
type Student = record {
  id : nat64;
  name : text;
  lessons : vec nat64;
  grade_level : text;
};
type StudentPayload = record { name : text; grade_level : text };
type Teacher = record {
  id : nat64;
  subject : text;
  name : text;
  lessons : vec nat64;
  availability : vec ScheduleEntry;
};
type TeacherPayload = record { subject : text; name : text };
service : {
  add_lesson_to_student : (nat64, nat64) -> (Result);
  add_lesson_to_teacher : (nat64, nat64) -> (Result_1);
  add_schedule_to_lesson : (nat64, nat64) -> (Result_2);
  add_schedule_to_teacher : (nat64, nat64) -> (Result_1);
  add_student_to_lesson : (nat64, nat64) -> (Result_2);
  delete_lesson : (nat64) -> (Result_2);
  delete_lesson_from_student : (nat64, nat64) -> (Result);
  delete_lesson_from_teacher : (nat64, nat64) -> (Result_1);
  delete_schedule_entry : (nat64) -> (Result_3);
  delete_schedule_from_lesson : (nat64, nat64) -> (Result_2);
  delete_schedule_from_teacher : (nat64, nat64) -> (Result_1);
  delete_student : (nat64) -> (Result);
  delete_student_from_lesson : (nat64, nat64) -> (Result_2);
  delete_teacher : (nat64) -> (Result_1);
  get_all_lessons : () -> (Result_4) query;
  get_all_lessons_for_student : (nat64) -> (Result_4) query;
  get_all_lessons_for_teacher : (nat64) -> (Result_4) query;
  get_all_schedule_entries : () -> (Result_5) query;
  get_all_students : () -> (Result_6) query;
  get_all_students_for_lesson : (nat64) -> (Result_6) query;
  get_all_teachers : () -> (Result_7) query;
  get_lesson : (nat64) -> (Result_2) query;
  get_schedule_entry : (nat64) -> (Result_3) query;
  get_student : (nat64) -> (Result) query;
  get_teacher : (nat64) -> (Result_1) query;
  insert_lesson : (LessonPayload) -> (Result_8);
  insert_schedule_entry : (SchedulePayload) -> (Result_9);
  insert_student : (StudentPayload) -> (Result_10);
  insert_teacher : (TeacherPayload) -> (Result_11);
  update_lesson : (nat64, LessonPayload) -> (Result_2);
  update_schedule_entry : (nat64, SchedulePayload) -> (Result_3);
  update_student : (nat64, StudentPayload) -> (Result);
  update_teacher : (nat64, TeacherPayload) -> (Result_1);
}
